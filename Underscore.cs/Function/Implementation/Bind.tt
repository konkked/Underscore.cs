<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
using System;

// This code has been automatically generated
// if you want to make changes make them on 
// the corresponding the text template file
// Bind.tt
namespace Underscore.Function
{

	public class BindingComponent : IBindingComponent
	{

<#

    var argNames = "abcdefghijklmnopqrstuvwxyz";
    var typeArgs = Enumerable.Range(1, 16).Select(i => "T" + i).ToArray();
    var resultTypeArg = "TResult";
    var methodName = "Bind";


    for (int i = 1; i < 17; i++)
    {
        var currTypeArgs = typeArgs.Take(i).Concat(new[] {resultTypeArg}).ToArray();
        var currTypeArgsString = string.Join(", ", currTypeArgs);
        var fnSig = string.Format("Func<{0}>", currTypeArgsString);
		var currArgNames = argNames.Take(i).Select(a=>a.ToString()).ToArray();
                
        var currSigArgs = string.Join(", ",new[]{fnSig+" function"}.Concat(currTypeArgs.Zip(currArgNames, (a, b) => a + " " + b)));
		#>
		
		/// <summary>
        ///  Creates a new Function bound to the passed parameter
        /// </summary>
		public Func<TResult> Bind<<#=currTypeArgsString#>>( <#=currSigArgs#> )
		{
			return <#="( )=>"#>function( <#=string.Join(", ",currArgNames) #> );
		}
		
		<#
	}
#>

	}

}

